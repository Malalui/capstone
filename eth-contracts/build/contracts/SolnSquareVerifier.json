{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "whoTriggered",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferredOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "whoTriggered",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a_p",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "b_p",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c_p",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "h",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "k",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a_p",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "b_p",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c_p",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "h",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "k",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"whoTriggered\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferredOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"whoTriggered\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a_p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"b_p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c_p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"h\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"k\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a_p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"b_p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c_p\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"h\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"k\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x8d3f8fcdba562595d05b3465fb01b115498df0e92502b32468ea1306b7ced9e2\",\"urls\":[\"bzz-raw://10362c4a05ce25bc4e3170810114bf5141645f238f88a348705a8d53388961a9\",\"dweb:/ipfs/QmX5PjVn22H9kurwK9oMaJFzhFS9jkhgLDxFSrBXkQVaS5\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x27d12a596b73a8c295c9a7243600690cdce41a29db5d0e27d9352250c5fd5b09\",\"urls\":[\"bzz-raw://fb8aeeb328869037dac924ece547c097d35fdcd227e533effa27e778f9dd5de7\",\"dweb:/ipfs/QmUyzLkYRTUwxmxMkbLtGLt221gJ5GBWtpqp7rzj7dHSwH\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0xcd066fadae4bc1361b25927d2618f4ebb8fecd21c0e9e43a30e981205739cd00\",\"urls\":[\"bzz-raw://cfc5b21695d0eda601596b810f1094e554c3f2a28fccbdb1399124a978fd0a02\",\"dweb:/ipfs/QmeC3KmL1tSH3ddLNkGDDe2BscqxRUAGTbKzSkeFtms1KR\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c80634f6ccce7116100f9578063b88d4fde11610097578063c87b56dd11610071578063c87b56dd14610e52578063e985e9c514610ef9578063f2fde38b14610f75578063fe01ff6214610fb9576101a9565b8063b88d4fde14610c9c578063bdc32be014610da1578063bff2612614610e24576101a9565b806373f3be36116100d357806373f3be36146108f0578063893d20e814610bd4578063a22cb46514610c1e578063a521ad7c14610c6e576101a9565b80634f6ccce7146107e85780636352211e1461082a57806370a0823114610898576101a9565b806318160ddd116101665780632f745c59116101405780632f745c591461055657806338bbfa50146105b857806340c10f191461071457806342842e0e1461077a576101a9565b806318160ddd1461040557806323b872dd1461042357806327dc297e14610491576101a9565b806301ffc9a7146101ae578063081812fc14610213578063095ea7b31461028157806315070401146102cf57806316c38b3c1461035257806317d7de7c14610382575b600080fd5b6101f9600480360360208110156101c457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611277565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561022957600080fd5b81019080803590602001909291905050506112df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102cd6004803603604081101561029757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061131c565b005b6102d76114f6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103175780820151818401526020810190506102fc565b50505050905090810190601f1680156103445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103806004803603602081101561036857600080fd5b81019080803515159060200190929190505050611598565b005b61038a611742565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ca5780820151818401526020810190506103af565b50505050905090810190601f1680156103f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61040d6117e4565b6040518082815260200191505060405180910390f35b61048f6004803603606081101561043957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117f1565b005b610554600480360360408110156104a757600080fd5b8101908080359060200190929190803590602001906401000000008111156104ce57600080fd5b8201836020820111156104e057600080fd5b8035906020019184600183028401116401000000008311171561050257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611814565b005b6105a26004803603604081101561056c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611857565b6040518082815260200191505060405180910390f35b610712600480360360608110156105ce57600080fd5b8101908080359060200190929190803590602001906401000000008111156105f557600080fd5b82018360208201111561060757600080fd5b8035906020019184600183028401116401000000008311171561062957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561068c57600080fd5b82018360208201111561069e57600080fd5b803590602001918460018302840111640100000000831117156106c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118ca565b005b6107606004803603604081101561072a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118cf565b604051808215151515815260200191505060405180910390f35b6107e66004803603606081101561079057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611993565b005b610814600480360360208110156107fe57600080fd5b81019080803590602001909291905050506119b3565b6040518082815260200191505060405180910390f35b6108566004803603602081101561084057600080fd5b81019080803590602001909291905050506119e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108da600480360360208110156108ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a24565b6040518082815260200191505060405180910390f35b610bbe60048036036102c081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610a27578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906109d3565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611a74565b6040518082815260200191505060405180910390f35b610bdc611def565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c6c60048036036040811015610c3457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611e18565b005b610c9a60048036036020811015610c8457600080fd5b8101908080359060200190929190505050611f52565b005b610d9f60048036036080811015610cb257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610d1957600080fd5b820183602082011115610d2b57600080fd5b80359060200191846001830284011164010000000083111715610d4d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612164565b005b610da961218a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610de9578082015181840152602081019050610dce565b50505050905090810190601f168015610e165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e5060048036036020811015610e3a57600080fd5b810190808035906020019092919050505061222c565b005b610e7e60048036036020811015610e6857600080fd5b810190808035906020019092919050505061237d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ebe578082015181840152602081019050610ea3565b50505050905090810190601f168015610eeb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f5b60048036036040811015610f0f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612444565b604051808215151515815260200191505060405180910390f35b610fb760048036036020811015610f8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124d8565b005b61125d6004803603610280811015610fd057600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156110c6578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190611072565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506126c6565b604051808215151515815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561138857600080fd5b611390611def565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114095750600115156114056002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633612444565b1515145b61141257600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561158e5780601f106115635761010080835404028352916020019161158e565b820191906000526020600020905b81548152906001019060200180831161157157829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461163d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614d30602f913960400191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555060001515600060149054906101000a900460ff16151514156116db577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a161173f565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117da5780601f106117af576101008083540402835291602001916117da565b820191906000526020600020905b8154815290600101906020018083116117bd57829003601f168201915b5050505050905090565b6000600880549050905090565b6117fb3382612a4d565b61180457600080fd5b61180f838383612ae2565b505050565b611853828260006040519080825280601f01601f19166020018201604052801561184d5781602001600182028038833980820191505090505b506118ca565b5050565b600061186283611a24565b821061186d57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106118b757fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614d30602f913960400191505060405180910390fd5b6119808383612b06565b6119898261222c565b6001905092915050565b6119ae83838360405180602001604052806000815250612164565b505050565b60006119bd6117e4565b82106119c857600080fd5b600882815481106119d557fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611a6d600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b27565b9050919050565b6000801515600060149054906101000a900460ff16151514611afe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f54686520636f6e7472616374206973207061757365640000000000000000000081525060200191505060405180910390fd5b60008a8988856040516020018085600260200280838360005b83811015611b32578082015181840152602081019050611b17565b505050509050018460026000925b81841015611b865782846020020151600260200280838360005b83811015611b75578082015181840152602081019050611b5a565b505050509050019260010192611b40565b9250505083600260200280838360005b83811015611bb1578082015181840152602081019050611b96565b5050505090500182600260200280838360005b83811015611bdf578082015181840152602081019050611bc4565b505050509050019450505050506040516020818303038152906040528051906020012090506000601360008381526020019081526020016000206001015414611c90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20616c7265616479207375626d697474656400000000000081525060200191505060405180910390fd5b611ca18b8b8b8b8b8b8b8b8b6126c6565b611d13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f536f6c7574696f6e20697320696e636f7272656374000000000000000000000081525060200191505060405180910390fd5b60405180604001604052808e73ffffffffffffffffffffffffffffffffffffffff1681526020018d8152506013600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507ffec8a71fa6c8a5b62fc287180a595fa2b01835ec8b6afca9a40cf8371ce1f698816040518082815260200191505060405180910390a1809150509b9a5050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e5157600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60001515600060149054906101000a900460ff16151514611fdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f54686520636f6e7472616374206973207061757365640000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166013600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156120b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536f6c7574696f6e20697320616c72656164792075736564000000000000000081525060200191505060405180910390fd5b61210a6013600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660136000848152602001908152602001600020600101546118cf565b5060006013600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61216f8484846117f1565b61217b84848484612b35565b61218457600080fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122225780601f106121f757610100808354040283529160200191612222565b820191906000526020600020905b81548152906001019060200180831161220557829003601f168201915b5050505050905090565b61223581612d1e565b6122a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20646f6573206e6f742065786973742e000000000000000000000081525060200191505060405180910390fd5b61235360118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123405780601f1061231557610100808354040283529160200191612340565b820191906000526020600020905b81548152906001019060200180831161232357829003601f168201915b505050505061234e83612d90565b612ebd565b601260008381526020019081526020016000209080519060200190612379929190614a50565b5050565b606061238882612d1e565b61239157600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124385780601f1061240d57610100808354040283529160200191612438565b820191906000526020600020905b81548152906001019060200180831161241b57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461257d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614d30602f913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f079076b938875eb6c289c646523dea0710c3fca11a87f93daa0588354a86153e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006126d0614ad0565b60405180604001604052808c6000600281106126e857fe5b602002015181526020018c6001600281106126ff57fe5b6020020151815250816000018190525060405180604001604052808b60006002811061272757fe5b602002015181526020018b60016002811061273e57fe5b60200201518152508160200181905250604051806040016040528060405180604001604052808c60006002811061277157fe5b602002015160006002811061278257fe5b602002015181526020018c60006002811061279957fe5b60200201516001600281106127aa57fe5b6020020151815250815260200160405180604001604052808c6001600281106127cf57fe5b60200201516000600281106127e057fe5b602002015181526020018c6001600281106127f757fe5b602002015160016002811061280857fe5b6020020151815250815250816040018190525060405180604001604052808960006002811061283357fe5b602002015181526020018960016002811061284a57fe5b6020020151815250816060018190525060405180604001604052808860006002811061287257fe5b602002015181526020018860016002811061288957fe5b602002015181525081608001819052506040518060400160405280876000600281106128b157fe5b60200201518152602001876001600281106128c857fe5b60200201518152508160a001819052506040518060400160405280866000600281106128f057fe5b602002015181526020018660016002811061290757fe5b60200201518152508160e0018190525060405180604001604052808560006002811061292f57fe5b602002015181526020018560016002811061294657fe5b60200201518152508160c00181905250606060026040519080825280602002602001820160405280156129885781602001602082028038833980820191505090505b50905060008090505b60028110156129d0578481600281106129a657fe5b60200201518282815181106129b757fe5b6020026020010181815250508080600101915050612991565b5060006129dd8284612f01565b1415612a39577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39604051808060200182810382526022815260200180614d0e6022913960400191505060405180910390a1600192505050612a40565b6000925050505b9998505050505050505050565b600080612a59836119e7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612ac857508373ffffffffffffffffffffffffffffffffffffffff16612ab0846112df565b73ffffffffffffffffffffffffffffffffffffffff16145b80612ad95750612ad88185612444565b5b91505092915050565b612aed838383613129565b612af783826133af565b612b01828261354d565b505050565b612b108282613614565b612b1a828261354d565b612b2381613796565b5050565b600081600001549050919050565b6000612b568473ffffffffffffffffffffffffffffffffffffffff166137e2565b612b635760019050612d16565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c3e578082015181840152602081019050612c23565b50505050905090810190601f168015612c6b5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c8d57600080fd5b505af1158015612ca1573d6000803e3d6000fd5b505050506040513d6020811015612cb757600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60606000821415612dd8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612eb8565b600082905060005b60008214612e02578080600101915050600a8281612dfa57fe5b049150612de0565b6060816040519080825280601f01601f191660200182016040528015612e375781602001600182028038833980820191505090505b50905060006001830390505b60008614612eb057600a8681612e5557fe5b0660300160f81b82828060019003935081518110612e6f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681612ea857fe5b049550612e43565b819450505050505b919050565b6060612ef9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061382d565b905092915050565b6000612f0b614b45565b612f13613aef565b90508060e0015151600185510114612f2a57600080fd5b612f32614bb4565b6040518060400160405280600081526020016000815250905060008090505b8551811015612fa957612f9a82612f958560e001516001850181518110612f7457fe5b6020026020010151898581518110612f8857fe5b6020026020010151614123565b6141b7565b91508080600101915050612f51565b50612fcc818360e00151600081518110612fbf57fe5b60200260200101516141b7565b9050612ff584600001518360000151612fe8876020015161426a565b612ff0614304565b6143ce565b61300457600192505050613123565b61302b8260200151856040015161301e876060015161426a565b613026614304565b6143ce565b61303a57600292505050613123565b613061846080015183604001516130548760a0015161426a565b61305c614304565b6143ce565b61307057600392505050613123565b6130bc8460c0015183606001516130a061309b856130968a600001518b608001516141b7565b6141b7565b61426a565b8560a001516130b2876080015161426a565b89604001516144ca565b6130cb57600492505050613123565b61310d6130dc8286600001516141b7565b85604001516130ee8760e0015161426a565b8560c00151613100896080015161426a565b613108614304565b6144ca565b61311c57600592505050613123565b6000925050505b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146131e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614d8a602e913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180614d5f602b913960400191505060405180910390fd5b61326f816145fa565b6132b6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206146b8565b6132fd600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206146ce565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006134076001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506146f190919063ffffffff16565b90506000600760008481526020019081526020016000205490508181146134f4576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061347457fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106134cc57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036135469190614bce565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6001151561362182612d1e565b15151415613697576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546f6b656e20494420616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613730600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206146b8565b808273ffffffffffffffffffffffffffffffffffffffff16613750611def565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561382457506000801b8214155b92505050919050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156138895781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561390e578881815181106138b557fe5b602001015160f81c60f81b8383806001019450815181106138d257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506138a0565b600090505b87518110156139815787818151811061392857fe5b602001015160f81c60f81b83838060010194508151811061394557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613913565b600090505b86518110156139f45786818151811061399b57fe5b602001015160f81c60f81b8383806001019450815181106139b857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613986565b600090505b8551811015613a6757858181518110613a0e57fe5b602001015160f81c60f81b838380600101945081518110613a2b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506139f9565b600090505b8451811015613ada57848181518110613a8157fe5b602001015160f81c60f81b838380600101945081518110613a9e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613a6c565b82995050505050505050505095945050505050565b613af7614b45565b604051806040016040528060405180604001604052807f0abbb11863eff28c66085e255ef09de1c37a9aca938c4acbcc78312aec85f4b081526020017f2e9da81a5ce1ebdfdf68ead5c5f75f7be6332c180e47ece9a79c93264cb0bdf4815250815260200160405180604001604052807f042d195b25eafe5b1a28723f79249cd40eec1b605312ed058a526ad2cc1a861281526020017f24ea08462399c974e5dd46fef72c7c77568f3e401044bdfe1921da72ca95b367815250815250816000018190525060405180604001604052807f21d073c8aa5591b80d17123ef1fe131ce7407aed410eaedd02cb0950d361101981526020017f2a06a0ad9da156d93466924cc211004a70df51292ed6852fd3b5ac419f7958fe8152508160200181905250604051806040016040528060405180604001604052807f22e62000bc0798e97270f72427b89699a45a4521f543c7140c8ad0c5337fa24481526020017f0bad8786a57570c827026a12fd6fb58d0732682dfdf33b251e7e06c55aab7d01815250815260200160405180604001604052807f20d69782f22df36c84fca9f569b09945e4413be952c626252e53da56a24cb5e781526020017f1f3422cf44031481a7108483f88cf39775f4b0c70317ab8ed50b9556db89ca788152508152508160400181905250604051806040016040528060405180604001604052807f1a3b39e61960d6909d5066ca3b49d8c81c0339e12a71dee4be65cb673010c91a81526020017f2b106b37e3e22915e42c25251fc1e63a5cfd1a91dd4fb4a84b932922c9d96f5d815250815260200160405180604001604052807f28f46c047aa2c17de0f80f62f961c1883bd3a0927edad7618610f4a78858ba8c81526020017f1ad854abd914e047f702a9600de6c36396fc59a5d548502cf7d41991b439e071815250815250816060018190525060405180604001604052807f0dad39f81f195d68f722df46256c292e6b35fa2503278312dfb9d000eab98b3a81526020017f0d6304e06dbff34e70b5ef45b0a7f9d4332efbea3a5a1be4d87e43997a63e9028152508160800181905250604051806040016040528060405180604001604052807f2a980fbac02244b645b3c77c8cab8e9214b5b0de1f7a8f8e8c70764c59f975db81526020017f172737ef13a5e7ee8fb42246cebae5fee806bbc99b05a5ea5e69c354e65fcd19815250815260200160405180604001604052807f03feb917daf737da65347157be5437a86a94fa1ec7dd143165be7ee8a240418a81526020017f18950f506a845cb2edca350bbc539b12d056e51b137caeb8c0da1cb6130144928152508152508160a00181905250604051806040016040528060405180604001604052807f12b327e3e3e7552a7be48da896f0260ae3c200d7ead71e7c959d8095f0bca1a681526020017f0b6c0c1028f587efc9628e585f79629b325078b30db98c4ba79857b8da7f5458815250815260200160405180604001604052807f0848cb656e870c0772ab4539921322b3bd9c9e4402bb68f2980ad042ba55cc7581526020017f19cc1de164bef5b66dfb27628244dea1aeef53aeae895f76ae7fd294518b13738152508152508160c001819052506003604051908082528060200260200182016040528015613fc557816020015b613fb2614bfa565b815260200190600190039081613faa5790505b508160e0018190525060405180604001604052807f06a636e8f1a43ce1e0c3e499feca248acba76b8a23b9cff8122001bc101bb72981526020017f235ed412beed20a5850ea359a7c71f00a44d49e5261d73f79663782fcefc3b388152508160e0015160008151811061403457fe5b602002602001018190525060405180604001604052807f088a563c5529603c116446b99282906d85829f995c669caabc20e34fc404e48381526020017f23bfa09c05b82445470a7cb184065c7b141696bce13973fbf54327c5292f31a18152508160e001516001815181106140a557fe5b602002602001018190525060405180604001604052807eed7829344c994deeabedbd2b056cfd6a79e2ab5b43c8d8ec168b6f3e05a91281526020017f012d7e283ec89a5dd6e08ab612a5ad1668fec1e71ca30f401d00acedb03249278152508160e0015160028151811061411557fe5b602002602001018190525090565b61412b614bb4565b614133614c14565b83600001518160006003811061414557fe5b60200201818152505083602001518160016003811061416057fe5b602002018181525050828160026003811061417757fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146141a2576141a4565bfe5b50806141af57600080fd5b505092915050565b6141bf614bb4565b6141c7614c36565b8360000151816000600481106141d957fe5b6020020181815250508360200151816001600481106141f457fe5b60200201818152505082600001518160026004811061420f57fe5b60200201818152505082602001518160036004811061422a57fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461425557614257565bfe5b508061426257600080fd5b505092915050565b614272614bb4565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156142af575060008360200151145b156142d35760405180604001604052806000815260200160008152509150506142ff565b604051806040016040528084600001518152602001828560200151816142f557fe5b0683038152509150505b919050565b61430c614c58565b604051806040016040528060405180604001604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160405180604001604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa815250815250905090565b60006060600260405190808252806020026020018201604052801561440d57816020015b6143fa614bfa565b8152602001906001900390816143f25790505b5090506060600260405190808252806020026020018201604052801561444d57816020015b61443a614c7e565b8152602001906001900390816144325790505b509050868260008151811061445e57fe5b6020026020010181905250848260018151811061447757fe5b6020026020010181905250858160008151811061449057fe5b602002602001018190525083816001815181106144a957fe5b60200260200101819052506144be828261473b565b92505050949350505050565b60006060600360405190808252806020026020018201604052801561450957816020015b6144f6614bfa565b8152602001906001900390816144ee5790505b5090506060600360405190808252806020026020018201604052801561454957816020015b614536614c7e565b81526020019060019003908161452e5790505b509050888260008151811061455a57fe5b6020026020010181905250868260018151811061457357fe5b6020026020010181905250848260028151811061458c57fe5b602002602001018190525087816000815181106145a557fe5b602002602001018190525085816001815181106145be57fe5b602002602001018190525083816002815181106145d757fe5b60200260200101819052506145ec828261473b565b925050509695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146146b55760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b6146e6600182600001546146f190919063ffffffff16565b816000018190555050565b600061473383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614990565b905092915050565b6000815183511461474b57600080fd5b600083519050600060068202905060608160405190808252806020026020018201604052801561478a5781602001602082028038833980820191505090505b50905060008090505b83811015614930578681815181106147a757fe5b6020026020010151600001518260006006840201815181106147c557fe5b6020026020010181815250508681815181106147dd57fe5b6020026020010151602001518260016006840201815181106147fb57fe5b60200260200101818152505085818151811061481357fe5b60200260200101516000015160006002811061482b57fe5b602002015182600260068402018151811061484257fe5b60200260200101818152505085818151811061485a57fe5b60200260200101516000015160016002811061487257fe5b602002015182600360068402018151811061488957fe5b6020026020010181815250508581815181106148a157fe5b6020026020010151602001516000600281106148b957fe5b60200201518260046006840201815181106148d057fe5b6020026020010181815250508581815181106148e857fe5b60200260200101516020015160016002811061490057fe5b602002015182600560068402018151811061491757fe5b6020026020010181815250508080600101915050614793565b50614939614ca4565b60006020826020860260208601600060086107d05a03f19050806000811461496057614962565bfe5b508061496d57600080fd5b60008260006001811061497c57fe5b602002015114159550505050505092915050565b6000838311158290614a3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a025780820151818401526020810190506149e7565b50505050905090810190601f168015614a2f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614a9157805160ff1916838001178555614abf565b82800160010185558215614abf579182015b82811115614abe578251825591602001919060010190614aa3565b5b509050614acc9190614cc6565b5090565b604051806101000160405280614ae4614bfa565b8152602001614af1614bfa565b8152602001614afe614c7e565b8152602001614b0b614bfa565b8152602001614b18614bfa565b8152602001614b25614bfa565b8152602001614b32614bfa565b8152602001614b3f614bfa565b81525090565b604051806101000160405280614b59614c7e565b8152602001614b66614bfa565b8152602001614b73614c7e565b8152602001614b80614c7e565b8152602001614b8d614bfa565b8152602001614b9a614c7e565b8152602001614ba7614c7e565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b815481835581811115614bf557818360005260206000209182019101614bf49190614cc6565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060400160405280614c6b614ceb565b8152602001614c78614ceb565b81525090565b6040518060400160405280614c91614ceb565b8152602001614c9e614ceb565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b614ce891905b80821115614ce4576000816000905550600101614ccc565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe5472616e73616374696f6e207375636365737366756c6c792076657269666965642e4f6e6c7920746865206f776e657220697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e546f6b656e2068617320746f206265207472616e73666572656420746f2076616c696420616464726573734f776e6572206f662074686520746f6b656e20646966666572656e742066726f6d2066726f6d2061646472657373a265627a7a7231582014d18392d880e4c902e4f44aade4879fd630f5c4aa5cc51e2abe732ddc790e3764736f6c63430005100032",
  "sourceMap": "301:1668:6:-;;;19975:283:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:10;849:6;;:19;;;;;;;;;;;;;;;;;;881:28;902:6;;;;;;;;;;;881:28;;;;;;;;;;;;;;;;;;;;;;2093:5;2083:7;;:15;;;;;;;;;;;;;;;;;;3035:40;2632:10;3054:20;;3035:18;;;:40;;:::i;:::-;5177;5051:10;5196:20;;5177:18;;;:40;;:::i;:::-;12683:51;12289:10;12702:31;;12683:18;;;:51;;:::i;:::-;20123:4;20115:5;:12;;;;;;;;;;;;:::i;:::-;;20147:6;20137:7;:16;;;;;;;;;;;;:::i;:::-;;20179:12;20163:13;:28;;;;;;;;;;;;:::i;:::-;;20202:49;19786:10;20221:29;;20202:18;;;:49;;:::i;:::-;19975:283;;;22318:42;22152:10;22337:22;;22318:18;;;:42;;:::i;:::-;301:1668:6;;3385:158:4;3475:10;3460:25;;:11;:25;;;;;3452:34;;;;;;3532:4;3496:20;:33;3517:11;3496:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3385:158;:::o;301:1668:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "301:1668:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:1668:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3173:133:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3173:133:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6342:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6342:167:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5756:580;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5756:580:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20432:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20432:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:183;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2376:183:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;20345:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20345:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13448:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7486:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7486:180:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:5;;;;;;;;;;;;;;;:::i;:::-;;13114:182:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13114:182:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;:::i;:::-;;22374:157:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22374:157:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7672:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7672:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13879:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13879:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5521:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5521:162:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5230:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5230:285:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;784:664:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;784:664:6;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1457:76:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6801:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6801:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1660:307:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1660:307:6;;;;;;;;;;;;;;;;;:::i;:::-;;7810:211:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7810:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7810:211:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7810:211:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7810:211:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7810:211:4;;;;;;;;;;;;;;;:::i;:::-;;20523:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20523:97:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21254:182;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21254:182:4;;;;;;;;;;;;;;;;;:::i;:::-;;20626:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20626:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20626:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7335:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7335:145:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1103:348;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1103:348:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;25125:1141:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;25125:1141:7;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3173:133:4;3243:4;3266:20;:33;3287:11;3266:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:40;;3173:133;;;:::o;6342:167::-;6401:7;6478:15;:24;6494:7;6478:24;;;;;;;;;;;;;;;;;;;;;6471:31;;6342:167;;;:::o;5756:580::-;5911:11;:20;5923:7;5911:20;;;;;;;;;;;;;;;;;;;;;5905:26;;:2;:26;;;;5897:35;;;;;;6068:10;:8;:10::i;:::-;6054:24;;:10;:24;;;:86;;;;6136:4;6082:58;;:50;6099:11;:20;6111:7;6099:20;;;;;;;;;;;;;;;;;;;;;6121:10;6082:16;:50::i;:::-;:58;;;6054:86;6046:95;;;;;;6231:2;6204:15;:24;6220:7;6204:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6320:7;6316:2;6285:43;;6294:11;:20;6306:7;6294:20;;;;;;;;;;;;;;;;;;;;;6285:43;;;;;;;;;;;;5756:580;;:::o;20432:85::-;20474:13;20503:7;20496:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20432:85;:::o;2376:183::-;972:6;;;;;;;;;;;958:20;;:10;:20;;;950:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:6;2430:7;;:16;;;;;;;;;;;;;;;;;;2467:5;2456:16;;:7;;;;;;;;;;;:16;;;2452:103;;;2486:18;2493:10;2486:18;;;;;;;;;;;;;;;;;;;;;;2452:103;;;2528:20;2537:10;2528:20;;;;;;;;;;;;;;;;;;;;;;2452:103;2376:183;:::o;20345:81::-;20385:13;20414:5;20407:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20345:81;:::o;13448:94::-;13492:7;13518:10;:17;;;;13511:24;;13448:94;:::o;7486:180::-;7576:39;7595:10;7607:7;7576:18;:39::i;:::-;7568:48;;;;;;7627:32;7641:4;7647:2;7651:7;7627:13;:32::i;:::-;7486:180;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13114:182:4:-;13194:7;13229:16;13239:5;13229:9;:16::i;:::-;13221:5;:24;13213:33;;;;;;13263:12;:19;13276:5;13263:19;;;;;;;;;;;;;;;13283:5;13263:26;;;;;;;;;;;;;;;;13256:33;;13114:182;;;;:::o;14929:166:5:-;;;;:::o;22374:157:4:-;22442:4;972:6;;;;;;;;;;;958:20;;:10;:20;;;950:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22453:24;22465:2;22469:7;22453:11;:24::i;:::-;22483:26;22501:7;22483:17;:26::i;:::-;22522:4;22515:11;;22374:157;;;;:::o;7672:132::-;7758:39;7775:4;7781:2;7785:7;7758:39;;;;;;;;;;;;:16;:39::i;:::-;7672:132;;;:::o;13879:148::-;13937:7;13972:13;:11;:13::i;:::-;13964:5;:21;13956:30;;;;;;14003:10;14014:5;14003:17;;;;;;;;;;;;;;;;13996:24;;13879:148;;;:::o;5521:162::-;5576:7;5656:11;:20;5668:7;5656:20;;;;;;;;;;;;;;;;;;;;;5649:27;;5521:162;;;:::o;5230:285::-;5285:7;5474:34;:17;:24;5492:5;5474:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5467:41;;5230:285;;;:::o;784:664:6:-;1064:7;2156:5:4;2145:16;;:7;;;;;;;;;;;:16;;;2137:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:11:6;1129:1;1132;1135;1138:5;1112:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:32:6;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:32:6;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:32:6;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1112:32:6;;;1102:43;;;;;;1088:57;;1196:1;1164:15;:20;1180:3;1164:20;;;;;;;;;;;:28;;;:33;1156:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:45;1255:1;1258:3;1263:1;1266:3;1271:1;1274:3;1279:1;1282;1285:5;1246:8;:45::i;:::-;1238:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:36;;;;;;;;1365:2;1351:36;;;;;;1378:7;1351:36;;;1328:15;:20;1344:3;1328:20;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:18;1417:3;1403:18;;;;;;;;;;;;;;;;;;1438:3;1431:10;;;784:664;;;;;;;;;;;;;:::o;1457:76:4:-;1497:7;1520:6;;;;;;;;;;;1513:13;;1457:76;:::o;6801:213::-;6886:10;6880:16;;:2;:16;;;;6872:25;;;;;;6944:8;6907:18;:30;6926:10;6907:30;;;;;;;;;;;;;;;:34;6938:2;6907:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6994:2;6967:40;;6982:10;6967:40;;;6998:8;6967:40;;;;;;;;;;;;;;;;;;;;;;6801:213;;:::o;1660:307:6:-;2156:5:4;2145:16;;:7;;;;;;;;;;;:16;;;2137:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:1:6;1737:37;;:15;:20;1753:3;1737:20;;;;;;;;;;;:23;;;;;;;;;;;;:37;;;;1729:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:65;1825:15;:20;1841:3;1825:20;;;;;;;;;;;:23;;;;;;;;;;;;1850:15;:20;1866:3;1850:20;;;;;;;;;;;:28;;;1814:10;:65::i;:::-;;1957:1;1923:15;:20;1939:3;1923:20;;;;;;;;;;;:23;;;:36;;;;;;;;;;;;;;;;;;1660:307;:::o;7810:211:4:-;7916:31;7929:4;7935:2;7939:7;7916:12;:31::i;:::-;7965:48;7988:4;7994:2;7998:7;8007:5;7965:22;:48::i;:::-;7957:57;;;;;;7810:211;;;;:::o;20523:97::-;20571:13;20600;20593:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20523:97;:::o;21254:182::-;21314:16;21322:7;21314;:16::i;:::-;21306:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21386:43;21396:13;21386:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21411:17;21420:7;21411:8;:17::i;:::-;21386:9;:43::i;:::-;21364:10;:19;21375:7;21364:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21254:182;:::o;20626:151::-;20684:13;20717:16;20725:7;20717;:16::i;:::-;20709:25;;;;;;20751:10;:19;20762:7;20751:19;;;;;;;;;;;20744:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20626:151;;;:::o;7335:145::-;7415:4;7438:18;:25;7457:5;7438:25;;;;;;;;;;;;;;;:35;7464:8;7438:35;;;;;;;;;;;;;;;;;;;;;;;;;7431:42;;7335:145;;;;:::o;1103:348::-;972:6;;;;;;;;;;;958:20;;:10;:20;;;950:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:1;1321:31;;1329:8;1321:31;;;;1313:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:8;1381:6;;:17;;;;;;;;;;;;;;;;;;1413:30;1434:8;1413:30;;;;;;;;;;;;;;;;;;;;;;1103:348;:::o;25125:1141:7:-;25452:6;25470:18;;:::i;:::-;25508:27;;;;;;;;25524:1;25526;25524:4;;;;;;;;;;;25508:27;;;;25530:1;25532;25530:4;;;;;;;;;;;25508:27;;;25498:5;:7;;:37;;;;25557:31;;;;;;;;25573:3;25577:1;25573:6;;;;;;;;;;;25557:31;;;;25581:3;25585:1;25581:6;;;;;;;;;;;25557:31;;;25545:5;:9;;:43;;;;25608:55;;;;;;;;;;;;;;;;25625:1;25627;25625:4;;;;;;;;;;;25630:1;25625:7;;;;;;;;;;;25608:55;;;;25634:1;25636;25634:4;;;;;;;;;;;25639:1;25634:7;;;;;;;;;;;25608:55;;;;;;;;;;;;;;;25645:1;25647;25645:4;;;;;;;;;;;25650:1;25645:7;;;;;;;;;;;25608:55;;;;25654:1;25656;25654:4;;;;;;;;;;;25659:1;25654:7;;;;;;;;;;;25608:55;;;;;;25598:5;:7;;:65;;;;25685:31;;;;;;;;25701:3;25705:1;25701:6;;;;;;;;;;;25685:31;;;;25709:3;25713:1;25709:6;;;;;;;;;;;25685:31;;;25673:5;:9;;:43;;;;25736:27;;;;;;;;25752:1;25754;25752:4;;;;;;;;;;;25736:27;;;;25758:1;25760;25758:4;;;;;;;;;;;25736:27;;;25726:5;:7;;:37;;;;25785:31;;;;;;;;25801:3;25805:1;25801:6;;;;;;;;;;;25785:31;;;;25809:3;25813:1;25809:6;;;;;;;;;;;25785:31;;;25773:5;:9;;:43;;;;25836:27;;;;;;;;25852:1;25854;25852:4;;;;;;;;;;;25836:27;;;;25858:1;25860;25858:4;;;;;;;;;;;25836:27;;;25826:5;:7;;:37;;;;25883:27;;;;;;;;25899:1;25901;25899:4;;;;;;;;;;;25883:27;;;;25905:1;25907;25905:4;;;;;;;;;;;25883:27;;;25873:5;:7;;:37;;;;25920:25;25959:12;25948:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;25948:24:7;;;;25920:52;;25986:6;25995:1;25986:10;;25982:88;26002:12;25998:1;:16;25982:88;;;26051:5;26057:1;26051:8;;;;;;;;;;;26034:11;26046:1;26034:14;;;;;;;;;;;;;:25;;;;;26016:3;;;;;;;25982:88;;;;26113:1;26083:26;26090:11;26103:5;26083:6;:26::i;:::-;:31;26079:181;;;26135:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26202:4;26195:11;;;;;;26079:181;26244:5;26237:12;;;;25125:1141;;;;;;;;;;;;:::o;8727:246:4:-;8812:4;8828:13;8844:16;8852:7;8844;:16::i;:::-;8828:32;;8889:5;8878:16;;:7;:16;;;:51;;;;8922:7;8898:31;;:20;8910:7;8898:11;:20::i;:::-;:31;;;8878:51;:87;;;;8933:32;8950:5;8957:7;8933:16;:32::i;:::-;8878:87;8870:96;;;8727:246;;;;:::o;14402:239::-;14487:38;14507:4;14513:2;14517:7;14487:19;:38::i;:::-;14536:47;14569:4;14575:7;14536:32;:47::i;:::-;14594:40;14622:2;14626:7;14594:27;:40::i;:::-;14402:239;;;:::o;14896:196::-;14959:24;14971:2;14975:7;14959:11;:24::i;:::-;14994:40;15022:2;15026:7;14994:27;:40::i;:::-;15045;15077:7;15045:31;:40::i;:::-;14896:196;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11134:347:4:-;11255:4;11280:15;:2;:13;;;:15::i;:::-;11275:58;;11318:4;11311:11;;;;11275:58;11343:13;11375:2;11359:36;;;11396:10;11408:4;11414:7;11423:5;11359:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11359:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11359:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11359:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11359:70:4;;;;;;;;;;;;;;;;11343:86;;4184:10;11457:16;;11447:26;;;:6;:26;;;;11439:35;;;11134:347;;;;;;;:::o;8215:152::-;8272:4;8288:13;8304:11;:20;8316:7;8304:20;;;;;;;;;;;;;;;;;;;;;8288:36;;8358:1;8341:19;;:5;:19;;;;8334:26;;;8215:152;;;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;23833:1257:7:-;23908:4;23924:22;;:::i;:::-;23949:14;:12;:14::i;:::-;23924:39;;24001:2;:5;;;:12;23996:1;23981:5;:12;:16;:32;23973:41;;;;;;24071:27;;:::i;:::-;24101:21;;;;;;;;24117:1;24101:21;;;;24120:1;24101:21;;;24071:51;;24137:6;24146:1;24137:10;;24132:125;24153:5;:12;24149:1;:16;24132:125;;;24191:66;24208:4;24214:42;24233:2;:5;;;24243:1;24239;:5;24233:12;;;;;;;;;;;;;;24247:5;24253:1;24247:8;;;;;;;;;;;;;;24214:18;:42::i;:::-;24191:16;:66::i;:::-;24184:73;;24167:3;;;;;;;24132:125;;;;24274:32;24291:4;24297:2;:5;;;24303:1;24297:8;;;;;;;;;;;;;;24274:16;:32::i;:::-;24267:39;;24321:76;24342:5;:7;;;24351:2;:4;;;24357:25;24372:5;:9;;;24357:14;:25::i;:::-;24384:12;:10;:12::i;:::-;24321:20;:76::i;:::-;24316:91;;24406:1;24399:8;;;;;;24316:91;24422:76;24443:2;:4;;;24449:5;:7;;;24458:25;24473:5;:9;;;24458:14;:25::i;:::-;24485:12;:10;:12::i;:::-;24422:20;:76::i;:::-;24417:91;;24507:1;24500:8;;;;;;24417:91;24523:76;24544:5;:7;;;24553:2;:4;;;24559:25;24574:5;:9;;;24559:14;:25::i;:::-;24586:12;:10;:12::i;:::-;24523:20;:76::i;:::-;24518:91;;24608:1;24601:8;;;;;;24518:91;24624:216;24658:5;:7;;;24667:2;:8;;;24689:74;24704:58;24721:4;24727:34;24744:5;:7;;;24753:5;:7;;;24727:16;:34::i;:::-;24704:16;:58::i;:::-;24689:14;:74::i;:::-;24765:2;:13;;;24792:29;24807:2;:13;;;24792:14;:29::i;:::-;24823:5;:7;;;24624:20;:216::i;:::-;24619:231;;24849:1;24842:8;;;;;;24619:231;24865:190;24903:31;24920:4;24926:5;:7;;;24903:16;:31::i;:::-;24936:5;:7;;;24961:23;24976:5;:7;;;24961:14;:23::i;:::-;24986:2;:4;;;25008:23;25023:5;:7;;;25008:14;:23::i;:::-;25033:12;:10;:12::i;:::-;24865:20;:190::i;:::-;24860:205;;25064:1;25057:8;;;;;;24860:205;25082:1;25075:8;;;;23833:1257;;;;;:::o;9861:745:4:-;10049:4;10025:28;;:11;:20;10037:7;10025:20;;;;;;;;;;;;;;;;;;;;;:28;;;10017:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10205:1;10191:16;;:2;:16;;;;10183:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10298:23;10313:7;10298:14;:23::i;:::-;10406:33;:17;:21;10424:2;10406:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10449:35;:17;:23;10467:4;10449:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10517:2;10494:11;:20;10506:7;10494:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10590:7;10586:2;10571:27;;10580:4;10571:27;;;;;;;;;;;;9861:745;;;:::o;16869:1128::-;17131:22;17156:32;17186:1;17156:12;:18;17169:4;17156:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17131:57;;17198:18;17219:17;:26;17237:7;17219:26;;;;;;;;;;;;17198:47;;17363:14;17349:10;:28;17345:323;;17393:19;17415:12;:18;17428:4;17415:18;;;;;;;;;;;;;;;17434:14;17415:34;;;;;;;;;;;;;;;;17393:56;;17497:11;17464:12;:18;17477:4;17464:18;;;;;;;;;;;;;;;17483:10;17464:30;;;;;;;;;;;;;;;:44;;;;17613:10;17580:17;:30;17598:11;17580:30;;;;;;;;;;;:43;;;;17345:323;;17754:12;:18;17767:4;17754:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16869:1128;;;;:::o;15714:183::-;15827:12;:16;15840:2;15827:16;;;;;;;;;;;;;;;:23;;;;15798:17;:26;15816:7;15798:26;;;;;;;;;;;:52;;;;15860:12;:16;15873:2;15860:16;;;;;;;;;;;;;;;15882:7;15860:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15860:30:4;;;;;;;;;;;;;;;;;;;;;;15714:183;;:::o;9130:532::-;9300:4;9280:24;;:16;9288:7;9280;:16::i;:::-;:24;;;9277:84;;;9317:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9277:84;9473:2;9450:11;:20;9462:7;9450:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9485:33;:17;:21;9503:2;9485:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9595:7;9591:2;9570:33;;9579:10;:8;:10::i;:::-;9570:33;;;;;;;;;;;;9130:532;;:::o;16092:162::-;16195:10;:17;;;;16168:15;:24;16184:7;16168:24;;;;;;;;;;;:44;;;;16222:10;16238:7;16222:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16222:24:4;;;;;;;;;;;;;;;;;;;;;;16092:162;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;21024:2804:7:-;21071:22;;:::i;:::-;21112:327;;;;;;;;;;;;;;;;21137:66;21112:327;;;;21214:66;21112:327;;;;;;;;;;;;;;;21293:66;21112:327;;;;21370:66;21112:327;;;;;;21105:2;:4;;:334;;;;21456:169;;;;;;;;21480:66;21456:169;;;;21557:66;21456:169;;;21449:2;:4;;:176;;;;21642:327;;;;;;;;;;;;;;;;21667:66;21642:327;;;;21744:66;21642:327;;;;;;;;;;;;;;;21823:66;21642:327;;;;21900:66;21642:327;;;;;;21635:2;:4;;:334;;;;21990:327;;;;;;;;;;;;;;;;22015:66;21990:327;;;;22092:66;21990:327;;;;;;;;;;;;;;;22171:66;21990:327;;;;22248:66;21990:327;;;;;;21979:2;:8;;:338;;;;22343:169;;;;;;;;22367:66;22343:169;;;;22444:66;22343:169;;;22327:2;:13;;:185;;;;22538:327;;;;;;;;;;;;;;;;22563:66;22538:327;;;;22640:66;22538:327;;;;;;;;;;;;;;;22719:66;22538:327;;;;22796:66;22538:327;;;;;;22522:2;:13;;:343;;;;22882:327;;;;;;;;;;;;;;;;22907:66;22882:327;;;;22984:66;22882:327;;;;;;;;;;;;;;;23063:66;22882:327;;;;23140:66;22882:327;;;;;;22875:2;:4;;:334;;;;23249:1;23227:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23219:2;:5;;:32;;;;23272:169;;;;;;;;23296:66;23272:169;;;;23373:66;23272:169;;;23261:2;:5;;;23267:1;23261:8;;;;;;;;;;;;;:180;;;;23462:169;;;;;;;;23486:66;23462:169;;;;23563:66;23462:169;;;23451:2;:5;;;23457:1;23451:8;;;;;;;;;;;;;:180;;;;23652:169;;;;;;;;23676:66;23652:169;;;;23753:66;23652:169;;;23641:2;:5;;;23647:1;23641:8;;;;;;;;;;;;;:180;;;;21024:2804;:::o;17339:444::-;17403:16;;:::i;:::-;17431:20;;:::i;:::-;17472:1;:3;;;17461:5;17467:1;17461:8;;;;;;;;;;:14;;;;;17496:1;:3;;;17485:5;17491:1;17485:8;;;;;;;;;;:14;;;;;17520:1;17509:5;17515:1;17509:8;;;;;;;;;;:12;;;;;17531;17630:4;17627:1;17621:4;17614:5;17611:1;17608;17601:4;17596:3;17592:14;17587:48;17576:59;;17712:7;17725:1;17720:20;;;;17705:35;;17720:20;17729:9;17705:35;;17768:7;17759:17;;;;;;17339:444;;;;;;:::o;16422:483::-;16496:16;;:::i;:::-;16524:20;;:::i;:::-;16565:2;:4;;;16554:5;16560:1;16554:8;;;;;;;;;;:15;;;;;16590:2;:4;;;16579:5;16585:1;16579:8;;;;;;;;;;:15;;;;;16615:2;:4;;;16604:5;16610:1;16604:8;;;;;;;;;;:15;;;;;16640:2;:4;;;16629:5;16635:1;16629:8;;;;;;;;;;:15;;;;;16654:12;16753:4;16750:1;16744:4;16737:5;16734:1;16731;16724:4;16719:3;16715:14;16710:48;16699:59;;16835:7;16848:1;16843:20;;;;16828:35;;16843:20;16852:9;16828:35;;16890:7;16882:16;;;;;;16422:483;;;;;;:::o;16033:340::-;16090:14;;:::i;:::-;16168:6;16177:77;16168:86;;16275:1;16268;:3;;;:8;:20;;;;;16287:1;16280;:3;;;:8;16268:20;16264:58;;;16309:13;;;;;;;;16317:1;16309:13;;;;16320:1;16309:13;;;16302:20;;;;;16264:58;16339:27;;;;;;;;16347:1;:3;;;16339:27;;;;16363:1;16357;:3;;;:7;;;;;;16352:1;:13;16339:27;;;16332:34;;;16033:340;;;;:::o;15487:462::-;15524:14;;:::i;:::-;15557:385;;;;;;;;;;;;;;;;15579:77;15557:385;;;;15671:77;15557:385;;;;;;;;;;;;;;;15764:76;15557:385;;;;15855:76;15557:385;;;;;;15550:392;;15487:462;:::o;18974:337::-;19090:4;19106:19;19142:1;19128:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19106:38;;19154:19;19190:1;19176:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19154:38;;19210:2;19202;19205:1;19202:5;;;;;;;;;;;;;:10;;;;19230:2;19222;19225:1;19222:5;;;;;;;;;;;;;:10;;;;19250:2;19242;19245:1;19242:5;;;;;;;;;;;;;:10;;;;19270:2;19262;19265:1;19262:5;;;;;;;;;;;;;:10;;;;19289:15;19297:2;19301;19289:7;:15::i;:::-;19282:22;;;;18974:337;;;;;;:::o;19380:457::-;19576:4;19592:19;19628:1;19614:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19592:38;;19640:19;19676:1;19662:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19640:38;;19696:2;19688;19691:1;19688:5;;;;;;;;;;;;;:10;;;;19716:2;19708;19711:1;19708:5;;;;;;;;;;;;;:10;;;;19736:2;19728;19731:1;19728:5;;;;;;;;;;;;;:10;;;;19756:2;19748;19751:1;19748:5;;;;;;;;;;;;;:10;;;;19776:2;19768;19771:1;19768:5;;;;;;;;;;;;;:10;;;;19796:2;19788;19791:1;19788:5;;;;;;;;;;;;;:10;;;;19815:15;19823:2;19827;19815:7;:15::i;:::-;19808:22;;;;19380:457;;;;;;;;:::o;11562:171:4:-;11661:1;11625:38;;:15;:24;11641:7;11625:24;;;;;;;;;;;;;;;;;;;;;:38;;;11621:106;;11714:1;11679:15;:24;11695:7;11679:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11621:106;11562:171;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;17994:913:7:-;18071:4;18108:2;:9;18095:2;:9;:22;18087:31;;;;;;18128:13;18144:2;:9;18128:25;;18163:14;18191:1;18180:8;:12;18163:29;;18202:19;18235:9;18224:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18224:21:7;;;;18202:43;;18260:6;18269:1;18260:10;;18255:307;18276:8;18272:1;:12;18255:307;;;18332:2;18335:1;18332:5;;;;;;;;;;;;;;:7;;;18313:5;18327:1;18323;18319;:5;:9;18313:16;;;;;;;;;;;;;:26;;;;;18372:2;18375:1;18372:5;;;;;;;;;;;;;;:7;;;18353:5;18367:1;18363;18359;:5;:9;18353:16;;;;;;;;;;;;;:26;;;;;18412:2;18415:1;18412:5;;;;;;;;;;;;;;:7;;;18420:1;18412:10;;;;;;;;;;;18393:5;18407:1;18403;18399;:5;:9;18393:16;;;;;;;;;;;;;:29;;;;;18455:2;18458:1;18455:5;;;;;;;;;;;;;;:7;;;18463:1;18455:10;;;;;;;;;;;18436:5;18450:1;18446;18442;:5;:9;18436:16;;;;;;;;;;;;;:29;;;;;18498:2;18501:1;18498:5;;;;;;;;;;;;;;:7;;;18506:1;18498:10;;;;;;;;;;;18479:5;18493:1;18489;18485;:5;:9;18479:16;;;;;;;;;;;;;:29;;;;;18541:2;18544:1;18541:5;;;;;;;;;;;;;;:7;;;18549:1;18541:10;;;;;;;;;;;18522:5;18536:1;18532;18528;:5;:9;18522:16;;;;;;;;;;;;;:29;;;;;18286:3;;;;;;;18255:307;;;;18571:18;;:::i;:::-;18599:12;18727:4;18722:3;18715:4;18704:9;18700:20;18693:4;18686:5;18682:16;18679:1;18676;18669:4;18664:3;18660:14;18655:77;18644:88;;18809:7;18822:1;18817:20;;;;18802:35;;18817:20;18826:9;18802:35;;18864:7;18856:16;;;;;;18899:1;18889:3;18893:1;18889:6;;;;;;;;;;;:11;;18882:18;;;;;;;17994:913;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;301:1668:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1668:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1668:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1668:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:1668:6;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport './Verifier.sol';\nimport './ERC721Mintable.sol';\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is PatriciaERC721Token, Verifier{\n\n  // TODO define a solutions struct that can hold an index & an address\n  struct Solution {\n      address to;\n      uint256 tokenId;\n  }\n\n\n// TODO define a mapping to store unique solutions submitted\nmapping(bytes32 => Solution) uniqueSolutions;\n\n\n// TODO Create an event to emit when a solution is added\nevent SolutionAdded(bytes32 key);\n\n\n// TODO Create a function to add the solutions to the array and emit the event\nfunction addSolution(\n  address to,\n  uint256 tokenId,\n  uint[2] memory a,\n  uint[2] memory a_p,\n  uint[2][2] memory b,\n  uint[2] memory b_p,\n  uint[2] memory c,\n  uint[2] memory c_p,\n  uint[2] memory h,\n  uint[2] memory k,\n  uint[2] memory input\n  ) public whenNotPaused returns(bytes32)\n    {\n\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, input));\n\n        require(uniqueSolutions[key].tokenId == 0, \"Solution already submitted\");\n        require(verifyTx(a, a_p, b, b_p, c, c_p, h, k, input), \"Solution is incorrect\");\n\n        uniqueSolutions[key] = Solution({to: to, tokenId: tokenId});\n\n        emit SolutionAdded(key);\n        return key;\n    }\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\nfunction mintToken(bytes32 key) public whenNotPaused \n    {\n\n        require(uniqueSolutions[key].to != address(0), \"Solution is already used\");\n\n        super.mint(uniqueSolutions[key].to, uniqueSolutions[key].tokenId);\n\n        // mark solution as used\n        uniqueSolutions[key].to = address(0);\n\n    }\n}\n",
  "sourcePath": "/home/patricia/Blockchain/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7885
      ]
    },
    "id": 7886,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7721,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7722,
        "nodeType": "ImportDirective",
        "scope": 7886,
        "sourceUnit": 10735,
        "src": "141:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7723,
        "nodeType": "ImportDirective",
        "scope": 7886,
        "sourceUnit": 1452,
        "src": "166:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7724,
              "name": "PatriciaERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1451,
              "src": "332:19:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PatriciaERC721Token_$1451",
                "typeString": "contract PatriciaERC721Token"
              }
            },
            "id": 7725,
            "nodeType": "InheritanceSpecifier",
            "src": "332:19:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7726,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10734,
              "src": "353:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10734",
                "typeString": "contract Verifier"
              }
            },
            "id": 7727,
            "nodeType": "InheritanceSpecifier",
            "src": "353:8:6"
          }
        ],
        "contractDependencies": [
          400,
          471,
          517,
          997,
          1295,
          1405,
          1451,
          7719,
          10734
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7885,
        "linearizedBaseContracts": [
          7885,
          10734,
          1451,
          1405,
          7719,
          1295,
          997,
          517,
          471,
          400
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7732,
            "members": [
              {
                "constant": false,
                "id": 7729,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7732,
                "src": "462:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7728,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "462:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7731,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7732,
                "src": "480:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7730,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "480:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7885,
            "src": "438:62:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7736,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7885,
            "src": "564:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7735,
              "keyType": {
                "id": 7733,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "572:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "564:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7734,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7732,
                "src": "583:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7732_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7740,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7738,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "689:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "688:13:6"
            },
            "src": "669:33:6"
          },
          {
            "body": {
              "id": 7841,
              "nodeType": "Block",
              "src": "1077:371:6",
              "statements": [
                {
                  "assignments": [
                    7790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7790,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7841,
                      "src": "1088:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7789,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1088:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7800,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7794,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7748,
                            "src": "1129:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7795,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7758,
                            "src": "1132:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7796,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7766,
                            "src": "1135:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7797,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7782,
                            "src": "1138:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7792,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10736,
                            "src": "1112:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1112:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1112:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7791,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10743,
                      "src": "1102:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1088:57:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7802,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7736,
                              "src": "1164:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7804,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7803,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7790,
                              "src": "1180:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1164:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7732_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7805,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7731,
                          "src": "1164:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1196:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1164:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c7265616479207375626d6974746564",
                        "id": 7808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1199:28:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8d7c3324fdb5ade069746dba0e94b8f758b455e0a1c087a4a81e068f2565772",
                          "typeString": "literal_string \"Solution already submitted\""
                        },
                        "value": "Solution already submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8d7c3324fdb5ade069746dba0e94b8f758b455e0a1c087a4a81e068f2565772",
                          "typeString": "literal_string \"Solution already submitted\""
                        }
                      ],
                      "id": 7801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10752,
                        10753
                      ],
                      "referencedDeclaration": 10753,
                      "src": "1156:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7810,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:72:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7813,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7748,
                            "src": "1255:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7814,
                            "name": "a_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7752,
                            "src": "1258:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7815,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7758,
                            "src": "1263:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7816,
                            "name": "b_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7762,
                            "src": "1266:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7817,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7766,
                            "src": "1271:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7818,
                            "name": "c_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7770,
                            "src": "1274:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7819,
                            "name": "h",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7774,
                            "src": "1279:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7820,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7778,
                            "src": "1282:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7821,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7782,
                            "src": "1285:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7812,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10733,
                          "src": "1246:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                          }
                        },
                        "id": 7822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20697320696e636f7272656374",
                        "id": 7823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:23:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab58274652141b6811cbd349ad2581e7993ca40b8233912ac404a2a8c7f8a918",
                          "typeString": "literal_string \"Solution is incorrect\""
                        },
                        "value": "Solution is incorrect"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab58274652141b6811cbd349ad2581e7993ca40b8233912ac404a2a8c7f8a918",
                          "typeString": "literal_string \"Solution is incorrect\""
                        }
                      ],
                      "id": 7811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10752,
                        10753
                      ],
                      "referencedDeclaration": 10753,
                      "src": "1238:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:79:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7825,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:79:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7826,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7736,
                        "src": "1328:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7828,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7827,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7790,
                        "src": "1344:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1328:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7732_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7830,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7742,
                          "src": "1365:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7831,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7744,
                          "src": "1378:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7829,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7732,
                        "src": "1351:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7732_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "to",
                        "tokenId"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1351:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7732_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1328:59:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7732_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7834,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:59:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7836,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7790,
                        "src": "1417:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7835,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7740,
                      "src": "1403:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 7837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7838,
                  "nodeType": "EmitStatement",
                  "src": "1398:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7839,
                    "name": "key",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7790,
                    "src": "1438:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7788,
                  "id": 7840,
                  "nodeType": "Return",
                  "src": "1431:10:6"
                }
              ]
            },
            "documentation": null,
            "id": 7842,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7785,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7784,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 423,
                  "src": "1042:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:13:6"
              }
            ],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7742,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "808:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7744,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "822:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7748,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "841:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7745,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "841:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7747,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "846:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "841:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7752,
                  "name": "a_p",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "861:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7749,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "861:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7751,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "866:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "861:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7758,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "883:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7753,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "883:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7755,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "883:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7757,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "891:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "883:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7762,
                  "name": "b_p",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "906:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7759,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "906:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7761,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "911:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "906:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7766,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "928:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7763,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "928:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7765,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "933:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "928:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7770,
                  "name": "c_p",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "948:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7767,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "948:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7769,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "953:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "948:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7774,
                  "name": "h",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "970:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7771,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "970:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7773,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "975:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "970:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7778,
                  "name": "k",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "990:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7775,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "990:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7777,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "995:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "990:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7782,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "1010:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7779,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1010:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7781,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1015:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1010:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "804:230:6"
            },
            "returnParameters": {
              "id": 7788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7787,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7842,
                  "src": "1064:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7786,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1063:9:6"
            },
            "scope": 7885,
            "src": "784:664:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7883,
              "nodeType": "Block",
              "src": "1718:249:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7850,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7736,
                              "src": "1737:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7852,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7851,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7844,
                              "src": "1753:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1737:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7732_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7853,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7729,
                          "src": "1737:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1772:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1764:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1764:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1737:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20697320616c72656164792075736564",
                        "id": 7858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1776:26:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd0548e69f3f18aa1134bf94352175c76fab78b32fe77e686e97e2e8312bdaa8",
                          "typeString": "literal_string \"Solution is already used\""
                        },
                        "value": "Solution is already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd0548e69f3f18aa1134bf94352175c76fab78b32fe77e686e97e2e8312bdaa8",
                          "typeString": "literal_string \"Solution is already used\""
                        }
                      ],
                      "id": 7849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10752,
                        10753
                      ],
                      "referencedDeclaration": 10753,
                      "src": "1729:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:74:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7860,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:74:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7864,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7736,
                            "src": "1825:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7866,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7865,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7844,
                            "src": "1841:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1825:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7732_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7867,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7729,
                        "src": "1825:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7868,
                            "name": "uniqueSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7736,
                            "src": "1850:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7870,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7869,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7844,
                            "src": "1866:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1850:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7732_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7731,
                        "src": "1850:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7861,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10804,
                        "src": "1814:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7885",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1450,
                      "src": "1814:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:65:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7873,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:65:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7874,
                          "name": "uniqueSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7736,
                          "src": "1923:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7732_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7876,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7875,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7844,
                          "src": "1939:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1923:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7732_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7877,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7729,
                      "src": "1923:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1957:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1949:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 7880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1949:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1923:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7882,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:36:6"
                }
              ]
            },
            "documentation": null,
            "id": 7884,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7847,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7846,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 423,
                  "src": "1699:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:13:6"
              }
            ],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7844,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7884,
                  "src": "1679:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7843,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:13:6"
            },
            "returnParameters": {
              "id": 7848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:6"
            },
            "scope": 7885,
            "src": "1660:307:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7886,
        "src": "301:1668:6"
      }
    ],
    "src": "0:1970:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7885
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7721,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 10735,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7886,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7722,
        "name": "ImportDirective",
        "src": "141:24:6"
      },
      {
        "attributes": {
          "SourceUnit": 1452,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7886,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7723,
        "name": "ImportDirective",
        "src": "166:30:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            400,
            471,
            517,
            997,
            1295,
            1405,
            1451,
            7719,
            10734
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7885,
            10734,
            1451,
            1405,
            7719,
            1295,
            997,
            517,
            471,
            400
          ],
          "name": "SolnSquareVerifier",
          "scope": 7886
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "PatriciaERC721Token",
                  "referencedDeclaration": 1451,
                  "type": "contract PatriciaERC721Token"
                },
                "id": 7724,
                "name": "UserDefinedTypeName",
                "src": "332:19:6"
              }
            ],
            "id": 7725,
            "name": "InheritanceSpecifier",
            "src": "332:19:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10734,
                  "type": "contract Verifier"
                },
                "id": 7726,
                "name": "UserDefinedTypeName",
                "src": "353:8:6"
              }
            ],
            "id": 7727,
            "name": "InheritanceSpecifier",
            "src": "353:8:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7885,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 7732,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7728,
                    "name": "ElementaryTypeName",
                    "src": "462:7:6"
                  }
                ],
                "id": 7729,
                "name": "VariableDeclaration",
                "src": "462:10:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7732,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7730,
                    "name": "ElementaryTypeName",
                    "src": "480:7:6"
                  }
                ],
                "id": 7731,
                "name": "VariableDeclaration",
                "src": "480:15:6"
              }
            ],
            "id": 7732,
            "name": "StructDefinition",
            "src": "438:62:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolutions",
              "scope": 7885,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7733,
                    "name": "ElementaryTypeName",
                    "src": "572:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7732,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7734,
                    "name": "UserDefinedTypeName",
                    "src": "583:8:6"
                  }
                ],
                "id": 7735,
                "name": "Mapping",
                "src": "564:28:6"
              }
            ],
            "id": 7736,
            "name": "VariableDeclaration",
            "src": "564:44:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "key",
                      "scope": 7740,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7737,
                        "name": "ElementaryTypeName",
                        "src": "689:7:6"
                      }
                    ],
                    "id": 7738,
                    "name": "VariableDeclaration",
                    "src": "689:11:6"
                  }
                ],
                "id": 7739,
                "name": "ParameterList",
                "src": "688:13:6"
              }
            ],
            "id": 7740,
            "name": "EventDefinition",
            "src": "669:33:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addSolution",
              "scope": 7885,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7741,
                        "name": "ElementaryTypeName",
                        "src": "808:7:6"
                      }
                    ],
                    "id": 7742,
                    "name": "VariableDeclaration",
                    "src": "808:10:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7743,
                        "name": "ElementaryTypeName",
                        "src": "822:7:6"
                      }
                    ],
                    "id": 7744,
                    "name": "VariableDeclaration",
                    "src": "822:15:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7745,
                            "name": "ElementaryTypeName",
                            "src": "841:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7746,
                            "name": "Literal",
                            "src": "846:1:6"
                          }
                        ],
                        "id": 7747,
                        "name": "ArrayTypeName",
                        "src": "841:7:6"
                      }
                    ],
                    "id": 7748,
                    "name": "VariableDeclaration",
                    "src": "841:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a_p",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7749,
                            "name": "ElementaryTypeName",
                            "src": "861:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7750,
                            "name": "Literal",
                            "src": "866:1:6"
                          }
                        ],
                        "id": 7751,
                        "name": "ArrayTypeName",
                        "src": "861:7:6"
                      }
                    ],
                    "id": 7752,
                    "name": "VariableDeclaration",
                    "src": "861:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7753,
                                "name": "ElementaryTypeName",
                                "src": "883:4:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7754,
                                "name": "Literal",
                                "src": "888:1:6"
                              }
                            ],
                            "id": 7755,
                            "name": "ArrayTypeName",
                            "src": "883:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7756,
                            "name": "Literal",
                            "src": "891:1:6"
                          }
                        ],
                        "id": 7757,
                        "name": "ArrayTypeName",
                        "src": "883:10:6"
                      }
                    ],
                    "id": 7758,
                    "name": "VariableDeclaration",
                    "src": "883:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b_p",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7759,
                            "name": "ElementaryTypeName",
                            "src": "906:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7760,
                            "name": "Literal",
                            "src": "911:1:6"
                          }
                        ],
                        "id": 7761,
                        "name": "ArrayTypeName",
                        "src": "906:7:6"
                      }
                    ],
                    "id": 7762,
                    "name": "VariableDeclaration",
                    "src": "906:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7763,
                            "name": "ElementaryTypeName",
                            "src": "928:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7764,
                            "name": "Literal",
                            "src": "933:1:6"
                          }
                        ],
                        "id": 7765,
                        "name": "ArrayTypeName",
                        "src": "928:7:6"
                      }
                    ],
                    "id": 7766,
                    "name": "VariableDeclaration",
                    "src": "928:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c_p",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7767,
                            "name": "ElementaryTypeName",
                            "src": "948:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7768,
                            "name": "Literal",
                            "src": "953:1:6"
                          }
                        ],
                        "id": 7769,
                        "name": "ArrayTypeName",
                        "src": "948:7:6"
                      }
                    ],
                    "id": 7770,
                    "name": "VariableDeclaration",
                    "src": "948:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "h",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7771,
                            "name": "ElementaryTypeName",
                            "src": "970:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7772,
                            "name": "Literal",
                            "src": "975:1:6"
                          }
                        ],
                        "id": 7773,
                        "name": "ArrayTypeName",
                        "src": "970:7:6"
                      }
                    ],
                    "id": 7774,
                    "name": "VariableDeclaration",
                    "src": "970:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "k",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7775,
                            "name": "ElementaryTypeName",
                            "src": "990:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7776,
                            "name": "Literal",
                            "src": "995:1:6"
                          }
                        ],
                        "id": 7777,
                        "name": "ArrayTypeName",
                        "src": "990:7:6"
                      }
                    ],
                    "id": 7778,
                    "name": "VariableDeclaration",
                    "src": "990:16:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7779,
                            "name": "ElementaryTypeName",
                            "src": "1010:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7780,
                            "name": "Literal",
                            "src": "1015:1:6"
                          }
                        ],
                        "id": 7781,
                        "name": "ArrayTypeName",
                        "src": "1010:7:6"
                      }
                    ],
                    "id": 7782,
                    "name": "VariableDeclaration",
                    "src": "1010:20:6"
                  }
                ],
                "id": 7783,
                "name": "ParameterList",
                "src": "804:230:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7842,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7786,
                        "name": "ElementaryTypeName",
                        "src": "1064:7:6"
                      }
                    ],
                    "id": 7787,
                    "name": "VariableDeclaration",
                    "src": "1064:7:6"
                  }
                ],
                "id": 7788,
                "name": "ParameterList",
                "src": "1063:9:6"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 423,
                      "type": "modifier ()",
                      "value": "whenNotPaused"
                    },
                    "id": 7784,
                    "name": "Identifier",
                    "src": "1042:13:6"
                  }
                ],
                "id": 7785,
                "name": "ModifierInvocation",
                "src": "1042:13:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7790
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7841,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7789,
                            "name": "ElementaryTypeName",
                            "src": "1088:7:6"
                          }
                        ],
                        "id": 7790,
                        "name": "VariableDeclaration",
                        "src": "1088:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10743,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7791,
                            "name": "Identifier",
                            "src": "1102:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10736,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7792,
                                    "name": "Identifier",
                                    "src": "1112:3:6"
                                  }
                                ],
                                "id": 7793,
                                "name": "MemberAccess",
                                "src": "1112:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7748,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7794,
                                "name": "Identifier",
                                "src": "1129:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7758,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7795,
                                "name": "Identifier",
                                "src": "1132:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7766,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7796,
                                "name": "Identifier",
                                "src": "1135:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7782,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7797,
                                "name": "Identifier",
                                "src": "1138:5:6"
                              }
                            ],
                            "id": 7798,
                            "name": "FunctionCall",
                            "src": "1112:32:6"
                          }
                        ],
                        "id": 7799,
                        "name": "FunctionCall",
                        "src": "1102:43:6"
                      }
                    ],
                    "id": 7800,
                    "name": "VariableDeclarationStatement",
                    "src": "1088:57:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b8d7c3324fdb5ade069746dba0e94b8f758b455e0a1c087a4a81e068f2565772",
                                  "typeString": "literal_string \"Solution already submitted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10752,
                                10753
                              ],
                              "referencedDeclaration": 10753,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7801,
                            "name": "Identifier",
                            "src": "1156:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "tokenId",
                                  "referencedDeclaration": 7731,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7736,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7802,
                                        "name": "Identifier",
                                        "src": "1164:15:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7790,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7803,
                                        "name": "Identifier",
                                        "src": "1180:3:6"
                                      }
                                    ],
                                    "id": 7804,
                                    "name": "IndexAccess",
                                    "src": "1164:20:6"
                                  }
                                ],
                                "id": 7805,
                                "name": "MemberAccess",
                                "src": "1164:28:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7806,
                                "name": "Literal",
                                "src": "1196:1:6"
                              }
                            ],
                            "id": 7807,
                            "name": "BinaryOperation",
                            "src": "1164:33:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c7265616479207375626d6974746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already submitted\"",
                              "value": "Solution already submitted"
                            },
                            "id": 7808,
                            "name": "Literal",
                            "src": "1199:28:6"
                          }
                        ],
                        "id": 7809,
                        "name": "FunctionCall",
                        "src": "1156:72:6"
                      }
                    ],
                    "id": 7810,
                    "name": "ExpressionStatement",
                    "src": "1156:72:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ab58274652141b6811cbd349ad2581e7993ca40b8233912ac404a2a8c7f8a918",
                                  "typeString": "literal_string \"Solution is incorrect\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10752,
                                10753
                              ],
                              "referencedDeclaration": 10753,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7811,
                            "name": "Identifier",
                            "src": "1238:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10733,
                                  "type": "function (uint256[2] memory,uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)",
                                  "value": "verifyTx"
                                },
                                "id": 7812,
                                "name": "Identifier",
                                "src": "1246:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7748,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7813,
                                "name": "Identifier",
                                "src": "1255:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7752,
                                  "type": "uint256[2] memory",
                                  "value": "a_p"
                                },
                                "id": 7814,
                                "name": "Identifier",
                                "src": "1258:3:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7758,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7815,
                                "name": "Identifier",
                                "src": "1263:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7762,
                                  "type": "uint256[2] memory",
                                  "value": "b_p"
                                },
                                "id": 7816,
                                "name": "Identifier",
                                "src": "1266:3:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7766,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7817,
                                "name": "Identifier",
                                "src": "1271:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7770,
                                  "type": "uint256[2] memory",
                                  "value": "c_p"
                                },
                                "id": 7818,
                                "name": "Identifier",
                                "src": "1274:3:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7774,
                                  "type": "uint256[2] memory",
                                  "value": "h"
                                },
                                "id": 7819,
                                "name": "Identifier",
                                "src": "1279:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7778,
                                  "type": "uint256[2] memory",
                                  "value": "k"
                                },
                                "id": 7820,
                                "name": "Identifier",
                                "src": "1282:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7782,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7821,
                                "name": "Identifier",
                                "src": "1285:5:6"
                              }
                            ],
                            "id": 7822,
                            "name": "FunctionCall",
                            "src": "1246:45:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20697320696e636f7272656374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is incorrect\"",
                              "value": "Solution is incorrect"
                            },
                            "id": 7823,
                            "name": "Literal",
                            "src": "1293:23:6"
                          }
                        ],
                        "id": 7824,
                        "name": "FunctionCall",
                        "src": "1238:79:6"
                      }
                    ],
                    "id": 7825,
                    "name": "ExpressionStatement",
                    "src": "1238:79:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7736,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "uniqueSolutions"
                                },
                                "id": 7826,
                                "name": "Identifier",
                                "src": "1328:15:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7790,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7827,
                                "name": "Identifier",
                                "src": "1344:3:6"
                              }
                            ],
                            "id": 7828,
                            "name": "IndexAccess",
                            "src": "1328:20:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "to",
                                "tokenId"
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7732,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 7829,
                                "name": "Identifier",
                                "src": "1351:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7742,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 7830,
                                "name": "Identifier",
                                "src": "1365:2:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7744,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7831,
                                "name": "Identifier",
                                "src": "1378:7:6"
                              }
                            ],
                            "id": 7832,
                            "name": "FunctionCall",
                            "src": "1351:36:6"
                          }
                        ],
                        "id": 7833,
                        "name": "Assignment",
                        "src": "1328:59:6"
                      }
                    ],
                    "id": 7834,
                    "name": "ExpressionStatement",
                    "src": "1328:59:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7740,
                              "type": "function (bytes32)",
                              "value": "SolutionAdded"
                            },
                            "id": 7835,
                            "name": "Identifier",
                            "src": "1403:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7790,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7836,
                            "name": "Identifier",
                            "src": "1417:3:6"
                          }
                        ],
                        "id": 7837,
                        "name": "FunctionCall",
                        "src": "1403:18:6"
                      }
                    ],
                    "id": 7838,
                    "name": "EmitStatement",
                    "src": "1398:23:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7788
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 7790,
                          "type": "bytes32",
                          "value": "key"
                        },
                        "id": 7839,
                        "name": "Identifier",
                        "src": "1438:3:6"
                      }
                    ],
                    "id": 7840,
                    "name": "Return",
                    "src": "1431:10:6"
                  }
                ],
                "id": 7841,
                "name": "Block",
                "src": "1077:371:6"
              }
            ],
            "id": 7842,
            "name": "FunctionDefinition",
            "src": "784:664:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mintToken",
              "scope": 7885,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7884,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7843,
                        "name": "ElementaryTypeName",
                        "src": "1679:7:6"
                      }
                    ],
                    "id": 7844,
                    "name": "VariableDeclaration",
                    "src": "1679:11:6"
                  }
                ],
                "id": 7845,
                "name": "ParameterList",
                "src": "1678:13:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7848,
                "name": "ParameterList",
                "src": "1718:0:6"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 423,
                      "type": "modifier ()",
                      "value": "whenNotPaused"
                    },
                    "id": 7846,
                    "name": "Identifier",
                    "src": "1699:13:6"
                  }
                ],
                "id": 7847,
                "name": "ModifierInvocation",
                "src": "1699:13:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cd0548e69f3f18aa1134bf94352175c76fab78b32fe77e686e97e2e8312bdaa8",
                                  "typeString": "literal_string \"Solution is already used\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10752,
                                10753
                              ],
                              "referencedDeclaration": 10753,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7849,
                            "name": "Identifier",
                            "src": "1729:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "to",
                                  "referencedDeclaration": 7729,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7736,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "uniqueSolutions"
                                        },
                                        "id": 7850,
                                        "name": "Identifier",
                                        "src": "1737:15:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7844,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7851,
                                        "name": "Identifier",
                                        "src": "1753:3:6"
                                      }
                                    ],
                                    "id": 7852,
                                    "name": "IndexAccess",
                                    "src": "1737:20:6"
                                  }
                                ],
                                "id": 7853,
                                "name": "MemberAccess",
                                "src": "1737:23:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7854,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1764:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7855,
                                    "name": "Literal",
                                    "src": "1772:1:6"
                                  }
                                ],
                                "id": 7856,
                                "name": "FunctionCall",
                                "src": "1764:10:6"
                              }
                            ],
                            "id": 7857,
                            "name": "BinaryOperation",
                            "src": "1737:37:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20697320616c72656164792075736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution is already used\"",
                              "value": "Solution is already used"
                            },
                            "id": 7858,
                            "name": "Literal",
                            "src": "1776:26:6"
                          }
                        ],
                        "id": 7859,
                        "name": "FunctionCall",
                        "src": "1729:74:6"
                      }
                    ],
                    "id": 7860,
                    "name": "ExpressionStatement",
                    "src": "1729:74:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1450,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10804,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7861,
                                "name": "Identifier",
                                "src": "1814:5:6"
                              }
                            ],
                            "id": 7863,
                            "name": "MemberAccess",
                            "src": "1814:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "to",
                              "referencedDeclaration": 7729,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7736,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7864,
                                    "name": "Identifier",
                                    "src": "1825:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7844,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7865,
                                    "name": "Identifier",
                                    "src": "1841:3:6"
                                  }
                                ],
                                "id": 7866,
                                "name": "IndexAccess",
                                "src": "1825:20:6"
                              }
                            ],
                            "id": 7867,
                            "name": "MemberAccess",
                            "src": "1825:23:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "tokenId",
                              "referencedDeclaration": 7731,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7736,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7868,
                                    "name": "Identifier",
                                    "src": "1850:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7844,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7869,
                                    "name": "Identifier",
                                    "src": "1866:3:6"
                                  }
                                ],
                                "id": 7870,
                                "name": "IndexAccess",
                                "src": "1850:20:6"
                              }
                            ],
                            "id": 7871,
                            "name": "MemberAccess",
                            "src": "1850:28:6"
                          }
                        ],
                        "id": 7872,
                        "name": "FunctionCall",
                        "src": "1814:65:6"
                      }
                    ],
                    "id": 7873,
                    "name": "ExpressionStatement",
                    "src": "1814:65:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "to",
                              "referencedDeclaration": 7729,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7736,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "uniqueSolutions"
                                    },
                                    "id": 7874,
                                    "name": "Identifier",
                                    "src": "1923:15:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7844,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7875,
                                    "name": "Identifier",
                                    "src": "1939:3:6"
                                  }
                                ],
                                "id": 7876,
                                "name": "IndexAccess",
                                "src": "1923:20:6"
                              }
                            ],
                            "id": 7877,
                            "name": "MemberAccess",
                            "src": "1923:23:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 7878,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1949:7:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7879,
                                "name": "Literal",
                                "src": "1957:1:6"
                              }
                            ],
                            "id": 7880,
                            "name": "FunctionCall",
                            "src": "1949:10:6"
                          }
                        ],
                        "id": 7881,
                        "name": "Assignment",
                        "src": "1923:36:6"
                      }
                    ],
                    "id": 7882,
                    "name": "ExpressionStatement",
                    "src": "1923:36:6"
                  }
                ],
                "id": 7883,
                "name": "Block",
                "src": "1718:249:6"
              }
            ],
            "id": 7884,
            "name": "FunctionDefinition",
            "src": "1660:307:6"
          }
        ],
        "id": 7885,
        "name": "ContractDefinition",
        "src": "301:1668:6"
      }
    ],
    "id": 7886,
    "name": "SourceUnit",
    "src": "0:1970:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-30T06:06:58.733Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}